{"version":3,"sources":["api/ApiCall.js","utils/index.js","components/Ingredient.js","components/Ingredients.js","views/MealInfo.js"],"names":["API","searchByName","mealDetails","randomMeal","categories","areas","ingredients","byCategory","byArea","Image","filterByIngredient","latestMeals","idMeal","strMeal","strMealThumb","strTags","strArea","strCategory","searchMealByName","async","res","fetch","meal","json","meals","id","getMeals","temp_meals","length","data","find","JSON","stringify","push","getIngredientImg","ingredient","listOfIngredients","filterByMainIngredient","ingredientName","isEmpty","obj","key","hasOwnProperty","Ingredient","_ref","useEffect","M","AutoInit","_jsxs","className","children","_jsx","src","img","alt","name","measure","Ingredients","_Fragment","map","index","MealInfo","setMeal","useState","setIngredients","useParams","mealInfo","getData","getMeal","window","scrollTo","i","item","Preloader","strInstructions","strYoutube","ReactPlayer","url","width","height","pip","stopOnUnmount"],"mappings":"6GAAA,oPAAMA,EAAM,CACVC,aAAc,wDACdC,YAAa,yDACbC,WAAY,qDACZC,WAAY,0DACZC,MAAO,0DACPC,YAAa,0DACbC,WAAY,wDACZC,OAAQ,wDACRC,MAAO,+CACPC,mBAAoB,yDAGhBC,EAAc,CAClB,CACEC,OAAQ,QACRC,QAAS,gBACTC,aACE,oEACFC,QAAS,GACTC,QAAS,QACTC,YAAa,QAEf,CACEL,OAAQ,QACRC,QAAS,0BACTC,aACE,oEACFC,QAAS,GACTC,QAAS,QACTC,YAAa,QAEf,CACEL,OAAQ,QACRC,QAAS,mBACTC,aACE,oEACFC,QAAS,GACTC,QAAS,QACTC,YAAa,QAEf,CACEL,OAAQ,QACRC,QAAS,qBACTC,aACE,oEACFC,QAAS,GACTC,QAAS,QACTC,YAAa,QAEf,CACEL,OAAQ,QACRC,QAAS,oBACTC,aACE,oEACFC,QAAS,GACTC,QAAS,WACTC,YAAa,QAEf,CACEL,OAAQ,QACRC,QAAS,sBACTC,aACE,oEACFC,QAAS,GACTC,QAAS,WACTC,YAAa,QAEf,CACEL,OAAQ,QACRC,QAAS,gBACTC,aACE,oEACFC,QAAS,GACTC,QAAS,WACTC,YAAa,QAEf,CACEL,OAAQ,QACRC,QAAS,kBACTC,aACE,oEACFC,QAAS,GACTC,QAAS,WACTC,YAAa,SAKXC,EAAmBC,UACvB,MAAMC,QAAYC,MAAM,GAAGrB,EAAIC,eAAeqB,KAE9C,aADmBF,EAAIG,QACXC,KAAK,EAIbtB,EAAciB,UAClB,MAAMC,QAAYC,MAAM,GAAGrB,EAAIE,cAAcuB,KAE7C,aADmBL,EAAIG,MACZ,EAIPG,EAAWP,UACf,IAAIQ,EAAa,GACjB,KAA6B,IAAtBA,EAAWC,QAAc,CAC9B,IAAIR,QAAYC,MAAMrB,EAAIG,YACtB0B,QAAaT,EAAIG,SACPI,EAAWG,MACtBR,GAASS,KAAKC,UAAUV,KAAUS,KAAKC,UAAUH,EAAKL,MAAM,OAG7DG,EAAWM,KAAKJ,EAAKL,MAAM,GAE/B,CACA,OAAOG,CAAU,EAUbO,EAAoBC,GACL,GAAGnC,EAAIS,SAAS0B,QAI/BC,EAAoBjB,UACxB,MAAMC,QAAYC,MAAMrB,EAAIM,aAE5B,aADmBc,EAAIG,QACXC,KAAK,EAGba,EAAyBlB,UAC7B,MAAMC,QAAYC,MAAM,GAAGrB,EAAIU,qBAAqB4B,KAEpD,aADmBlB,EAAIG,QACXC,KAAK,C,kCC3InB,wCAAMe,EAAWC,IACf,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAIE,eAAeD,GAAM,OAAO,EAEtC,OAAO,CAAI,C,2FCoBEE,MArBIC,IAAqB,IAApB,WAAET,GAAYS,EAIhC,OAHAC,qBAAU,KACRC,IAAEC,UAAU,GACX,IAEDC,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC5BC,cAAA,OACEF,UAAU,+BACVG,IAAKjB,EAAWkB,IAChBC,IAAKnB,EAAWoB,OAElBJ,cAAA,KAAAD,SACEC,cAAA,QAAAD,SAAOf,EAAWqB,YAEpBL,cAAA,KAAAD,SACEC,cAAA,QAAAD,SAAOf,EAAWoB,WAEhB,ECPKE,MAVKb,IAAsB,IAArB,YAAEtC,GAAasC,EAClC,OACEO,cAAAO,WAAA,CAAAR,SACG5C,EAAYqD,KAAI,CAACxB,EAAYyB,IAC5BT,cAACR,EAAU,CAAaR,WAAYA,GAAnByB,MAElB,E,iCC4FQC,UA7FEA,KACf,MAAOvC,EAAMwC,GAAWC,mBAAS,CAAC,IAC3BzD,EAAa0D,GAAkBD,mBAAS,IAC/C,IAAI,GAAEtC,GAAOwC,cAEbpB,qBAAU,KACQ1B,WACd,IAAI+C,QAAiBhE,YAAYuB,GACjCqC,EAAQI,EAAS1C,MAAM,IACvB2C,GAAS,EAEXC,EAAS,GAER,CAAC9C,IAEJuB,qBAAU,KACRwB,OAAOC,SAAS,EAAG,EAAE,GACpB,IAEH,MAAMH,EAAUhD,UACd,IAAIU,EAAO,GACP0C,EAAI,EACR,KAAQA,GAAK,GAAIA,IAAK,CACpB,MAAMC,EAAO,CACXjB,KAAMjC,EAAK,gBAAgBiD,KAC3Bf,QAASlC,EAAK,aAAaiD,KAC3BlB,IAAKnB,YAAiBZ,EAAK,gBAAgBiD,OAE7C1C,EAAKI,KAAKuC,GACVD,GAAK,CACP,CACA,OAAOP,EAAenC,EAAK,EAG7B,OACEmB,eAAA,OAAKC,UAAU,0CAAyCC,SAAA,CACtDC,cAAA,OAAKF,UAAU,gCAA+BC,SAC1CX,YAAQjB,GAYR6B,cAACsB,IAAS,IAXVzB,eAAA,OAAKC,UAAU,0BAAyBC,SAAA,CACtCC,cAAA,MAAIF,UAAU,eAAcC,SAC1BC,cAAA,QAAAD,SAAO5B,EAAKT,YAEdsC,cAAA,OACEF,UAAU,+BACVG,IAAK9B,EAAKR,aACVwC,IAAK,GAAGhC,EAAKT,sBAOrBsC,cAAA,OAAKF,UAAU,MAAKC,SAClBF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,MAAIF,UAAU,eAAcC,SAC1BC,cAAA,QAAAD,SAAM,kBAERC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAACM,EAAW,CAACnD,YAAaA,WAIhC6C,cAAA,OAAKF,UAAU,mBAAkBC,SAC/BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,MAAAD,SACEC,cAAA,QAAAD,SAAM,mBAERC,cAAA,KAAAD,SAAI5B,EAAKoD,uBAGZpD,EAAKqD,YACJxB,cAAA,OAAKF,UAAU,mBAAkBC,SAC/BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,MAAAD,SACEC,cAAA,QAAAD,SAAM,WAERC,cAAA,OAAKF,UAAU,iBAAgBC,SAC7BC,cAACyB,IAAW,CACV3B,UAAU,eACV4B,IAAKvD,EAAKqD,WACVG,MAAM,OACNC,OAAO,OACPC,KAAK,EACLC,eAAe,aAMrB,C","file":"static/js/9.66a50169.chunk.js","sourcesContent":["const API = {\n  searchByName: \"https://www.themealdb.com/api/json/v1/1/search.php?s=\",\n  mealDetails: \" https://www.themealdb.com/api/json/v1/1/lookup.php?i=\",\n  randomMeal: \"https://www.themealdb.com/api/json/v1/1/random.php\",\n  categories: \"https://www.themealdb.com/api/json/v1/1/list.php?c=list\",\n  areas: \"https://www.themealdb.com/api/json/v1/1/list.php?a=list\",\n  ingredients: \"https://www.themealdb.com/api/json/v1/1/list.php?i=list\",\n  byCategory: \"https://www.themealdb.com/api/json/v1/1/filter.php?c=\",\n  byArea: \"https://www.themealdb.com/api/json/v1/1/filter.php?a=\",\n  Image: \"https://www.themealdb.com/images/ingredients\",\n  filterByIngredient: \"https://www.themealdb.com/api/json/v1/1/filter.php?i=\",\n};\n\nconst latestMeals = [\n  {\n    idMeal: \"53038\",\n    strMeal: \"Mustard champ\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/o7p9581608589317.jpg\",\n    strTags: \"\",\n    strArea: \"Irish\",\n    strCategory: \"Side\",\n  },\n  {\n    idMeal: \"53037\",\n    strMeal: \"Coddled pork with cider\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/7vpsfp1608588991.jpg\",\n    strTags: \"\",\n    strArea: \"Irish\",\n    strCategory: \"Pork\",\n  },\n  {\n    idMeal: \"53036\",\n    strMeal: \" Boxty Breakfast\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/naqyel1608588563.jpg\",\n    strTags: \"\",\n    strArea: \"Irish\",\n    strCategory: \"Side\",\n  },\n  {\n    idMeal: \"53035\",\n    strMeal: \"Ham hock colcannon\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/n41ny81608588066.jpg\",\n    strTags: \"\",\n    strArea: \"Irish\",\n    strCategory: \"Pork\",\n  },\n  {\n    idMeal: \"53034\",\n    strMeal: \"Japanese Katsudon\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/d8f6qx1604182128.jpg\",\n    strTags: \"\",\n    strArea: \"Japanese\",\n    strCategory: \"Side\",\n  },\n  {\n    idMeal: \"53033\",\n    strMeal: \"Japanese gohan rice\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/kw92t41604181871.jpg\",\n    strTags: \"\",\n    strArea: \"Japanese\",\n    strCategory: \"Side\",\n  },\n  {\n    idMeal: \"53032\",\n    strMeal: \"Tonkatsu pork\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/lwsnkl1604181187.jpg\",\n    strTags: \"\",\n    strArea: \"Japanese\",\n    strCategory: \"Pork\",\n  },\n  {\n    idMeal: \"53031\",\n    strMeal: \"Egyptian Fatteh\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/rlwcc51598734603.jpg\",\n    strTags: \"\",\n    strArea: \"Egyptian\",\n    strCategory: \"Beef\",\n  },\n];\n\n// search meal name\nconst searchMealByName = async (meal) => {\n  const res = await fetch(`${API.searchByName}${meal}`);\n  const data = await res.json();\n  return data.meals;\n};\n\n// fetch meal details by id\nconst mealDetails = async (id) => {\n  const res = await fetch(`${API.mealDetails}${id}`);\n  const data = await res.json();\n  return data;\n};\n\n//fetch 8 random meals from API\nconst getMeals = async () => {\n  let temp_meals = [];\n  while (temp_meals.length !== 8) {\n    let res = await fetch(API.randomMeal);\n    let data = await res.json();\n    let isDup = !!temp_meals.find(\n      (meal) => JSON.stringify(meal) === JSON.stringify(data.meals[0])\n    );\n    if (!isDup) {\n      temp_meals.push(data.meals[0]);\n    }\n  }\n  return temp_meals;\n};\n\n// ? To be use in autocomplete search filter\nconst getAreas = async () => {\n  const res = await fetch(API.areas);\n  const data = res.json();\n  return data.meals;\n};\n\nconst getIngredientImg = (ingredient) => {\n  let imgThumbnail = `${API.Image}/${ingredient}.png`;\n  return imgThumbnail;\n};\n\nconst listOfIngredients = async () => {\n  const res = await fetch(API.ingredients);\n  const data = await res.json();\n  return data.meals;\n};\n\nconst filterByMainIngredient = async (ingredientName) => {\n  const res = await fetch(`${API.filterByIngredient}${ingredientName}`);\n  const data = await res.json();\n  return data.meals;\n};\n\nexport {\n  searchMealByName,\n  getMeals,\n  getAreas,\n  mealDetails,\n  latestMeals,\n  getIngredientImg,\n  listOfIngredients,\n  filterByMainIngredient,\n};\nexport default API;\n","const isEmpty = (obj) => {\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n  return true;\n};\n\nexport { isEmpty };\n","import React, { useEffect } from \"react\";\nimport M from \"materialize-css\";\n\nconst Ingredient = ({ ingredient }) => {\n  useEffect(() => {\n    M.AutoInit();\n  }, []);\n  return (\n    <div className=\"col s12 m4 l2\">\n      <img\n        className=\"materialboxed responsive-img\"\n        src={ingredient.img}\n        alt={ingredient.name}\n      />\n      <p>\n        <span>{ingredient.measure}</span>\n      </p>\n      <p>\n        <span>{ingredient.name}</span>\n      </p>\n    </div>\n  );\n};\n\nexport default Ingredient;\n","import React from \"react\";\nimport Ingredient from \"./Ingredient\";\n\nconst Ingredients = ({ ingredients }) => {\n  return (\n    <>\n      {ingredients.map((ingredient, index) => (\n        <Ingredient key={index} ingredient={ingredient} />\n      ))}\n    </>\n  );\n};\n\nexport default Ingredients;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getIngredientImg, mealDetails } from \"../api/ApiCall\";\nimport Ingredients from \"../components/Ingredients\";\nimport Preloader from \"../components/Preloader\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { isEmpty } from \"../utils\";\n\nconst MealInfo = () => {\n  const [meal, setMeal] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  let { id } = useParams();\n\n  useEffect(() => {\n    const getMeal = async () => {\n      let mealInfo = await mealDetails(id);\n      setMeal(mealInfo.meals[0]);\n      getData();\n    };\n    getMeal();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [meal]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getData = async () => {\n    let data = [];\n    let i = 1;\n    for (i; i <= 20; i++) {\n      const item = {\n        name: meal[`strIngredient${i}`],\n        measure: meal[`strMeasure${i}`],\n        img: getIngredientImg(meal[`strIngredient${i}`]),\n      };\n      data.push(item);\n      i += 1;\n    }\n    return setIngredients(data);\n  };\n\n  return (\n    <div className=\"container brown-text text-darken-2 mb-3\">\n      <div className=\"margin-tb row  mb-3 meal-info\">\n        {!isEmpty(meal) ? (\n          <div className=\"col s12 m5 push-m3 mb-3\">\n            <h4 className=\"center-align\">\n              <span>{meal.strMeal}</span>\n            </h4>\n            <img\n              className=\"materialboxed responsive-img\"\n              src={meal.strMealThumb}\n              alt={`${meal.strMeal} meal`}\n            />\n          </div>\n        ) : (\n          <Preloader />\n        )}\n      </div>\n      <div className=\"row\">\n        <div className=\"col s12\">\n          <h4 className=\"center-align\">\n            <span>Ingredients</span>\n          </h4>\n          <div className=\"center-align\">\n            <Ingredients ingredients={ingredients} />\n          </div>\n        </div>\n      </div>\n      <div className=\"row center-align\">\n        <div className=\"col s12\">\n          <h4>\n            <span>Instructions</span>\n          </h4>\n          <p>{meal.strInstructions}</p>\n        </div>\n      </div>\n      {meal.strYoutube && (\n        <div className=\"row center-align\">\n          <div className=\"col s12\">\n            <h4>\n              <span>Demo</span>\n            </h4>\n            <div className=\"player-wrapper\">\n              <ReactPlayer\n                className=\"react-player\"\n                url={meal.strYoutube}\n                width=\"100%\"\n                height=\"100%\"\n                pip={true}\n                stopOnUnmount={false}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MealInfo;\n"],"sourceRoot":""}