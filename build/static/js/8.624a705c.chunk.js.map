{"version":3,"sources":["api/ApiCall.js","components/Meal.js","components/Meals.js","views/SearchResult.js"],"names":["API","searchByName","mealDetails","randomMeal","categories","areas","ingredients","byCategory","byArea","Image","filterByIngredient","latestMeals","idMeal","strMeal","strMealThumb","strTags","strArea","strCategory","searchMealByName","async","res","fetch","meal","json","meals","id","getMeals","temp_meals","length","data","find","JSON","stringify","push","getIngredientImg","ingredient","listOfIngredients","filterByMainIngredient","ingredientName","Meal","_ref","_jsx","className","children","_jsxs","alt","src","loading","Link","to","style","fontWeight","Meals","map","SearchResult","setMeals","useState","isEmpty","setIsEmpty","param","useParams","useEffect","searchResult"],"mappings":"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","file":"static/js/8.624a705c.chunk.js","sourcesContent":["const API = {\n  searchByName: \"https://www.themealdb.com/api/json/v1/1/search.php?s=\",\n  mealDetails: \" https://www.themealdb.com/api/json/v1/1/lookup.php?i=\",\n  randomMeal: \"https://www.themealdb.com/api/json/v1/1/random.php\",\n  categories: \"https://www.themealdb.com/api/json/v1/1/list.php?c=list\",\n  areas: \"https://www.themealdb.com/api/json/v1/1/list.php?a=list\",\n  ingredients: \"https://www.themealdb.com/api/json/v1/1/list.php?i=list\",\n  byCategory: \"https://www.themealdb.com/api/json/v1/1/filter.php?c=\",\n  byArea: \"https://www.themealdb.com/api/json/v1/1/filter.php?a=\",\n  Image: \"https://www.themealdb.com/images/ingredients\",\n  filterByIngredient: \"https://www.themealdb.com/api/json/v1/1/filter.php?i=\",\n};\n\nconst latestMeals = [\n  {\n    idMeal: \"53038\",\n    strMeal: \"Mustard champ\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/o7p9581608589317.jpg\",\n    strTags: \"\",\n    strArea: \"Irish\",\n    strCategory: \"Side\",\n  },\n  {\n    idMeal: \"53037\",\n    strMeal: \"Coddled pork with cider\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/7vpsfp1608588991.jpg\",\n    strTags: \"\",\n    strArea: \"Irish\",\n    strCategory: \"Pork\",\n  },\n  {\n    idMeal: \"53036\",\n    strMeal: \" Boxty Breakfast\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/naqyel1608588563.jpg\",\n    strTags: \"\",\n    strArea: \"Irish\",\n    strCategory: \"Side\",\n  },\n  {\n    idMeal: \"53035\",\n    strMeal: \"Ham hock colcannon\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/n41ny81608588066.jpg\",\n    strTags: \"\",\n    strArea: \"Irish\",\n    strCategory: \"Pork\",\n  },\n  {\n    idMeal: \"53034\",\n    strMeal: \"Japanese Katsudon\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/d8f6qx1604182128.jpg\",\n    strTags: \"\",\n    strArea: \"Japanese\",\n    strCategory: \"Side\",\n  },\n  {\n    idMeal: \"53033\",\n    strMeal: \"Japanese gohan rice\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/kw92t41604181871.jpg\",\n    strTags: \"\",\n    strArea: \"Japanese\",\n    strCategory: \"Side\",\n  },\n  {\n    idMeal: \"53032\",\n    strMeal: \"Tonkatsu pork\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/lwsnkl1604181187.jpg\",\n    strTags: \"\",\n    strArea: \"Japanese\",\n    strCategory: \"Pork\",\n  },\n  {\n    idMeal: \"53031\",\n    strMeal: \"Egyptian Fatteh\",\n    strMealThumb:\n      \"https://www.themealdb.com/images/media/meals/rlwcc51598734603.jpg\",\n    strTags: \"\",\n    strArea: \"Egyptian\",\n    strCategory: \"Beef\",\n  },\n];\n\n// search meal name\nconst searchMealByName = async (meal) => {\n  const res = await fetch(`${API.searchByName}${meal}`);\n  const data = await res.json();\n  return data.meals;\n};\n\n// fetch meal details by id\nconst mealDetails = async (id) => {\n  const res = await fetch(`${API.mealDetails}${id}`);\n  const data = await res.json();\n  return data;\n};\n\n//fetch 8 random meals from API\nconst getMeals = async () => {\n  let temp_meals = [];\n  while (temp_meals.length !== 8) {\n    let res = await fetch(API.randomMeal);\n    let data = await res.json();\n    let isDup = !!temp_meals.find(\n      (meal) => JSON.stringify(meal) === JSON.stringify(data.meals[0])\n    );\n    if (!isDup) {\n      temp_meals.push(data.meals[0]);\n    }\n  }\n  return temp_meals;\n};\n\n// ? To be use in autocomplete search filter\nconst getAreas = async () => {\n  const res = await fetch(API.areas);\n  const data = res.json();\n  return data.meals;\n};\n\nconst getIngredientImg = (ingredient) => {\n  let imgThumbnail = `${API.Image}/${ingredient}.png`;\n  return imgThumbnail;\n};\n\nconst listOfIngredients = async () => {\n  const res = await fetch(API.ingredients);\n  const data = await res.json();\n  return data.meals;\n};\n\nconst filterByMainIngredient = async (ingredientName) => {\n  const res = await fetch(`${API.filterByIngredient}${ingredientName}`);\n  const data = await res.json();\n  return data.meals;\n};\n\nexport {\n  searchMealByName,\n  getMeals,\n  getAreas,\n  mealDetails,\n  latestMeals,\n  getIngredientImg,\n  listOfIngredients,\n  filterByMainIngredient,\n};\nexport default API;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Meal = ({ meal }) => {\n  return (\n    <div className=\"col s12 m4 l3 \">\n      <div className=\"card small hoverable\">\n        <div className=\"activator card-image\">\n          <img\n            className=\"responsive-img activator\"\n            alt={meal.strMeal}\n            src={meal.strMealThumb}\n            loading=\"lazy\"\n          />\n        </div>\n        <div className=\"card-content\">\n          <span className=\"cart-title activator brown-text text-lighten-1 truncate \">\n            {meal.strMeal}\n            <i className=\"material-icons right\">more_vert</i>\n          </span>\n        </div>\n        <div className=\"card-action\">\n        <Link\n          className=\"orange-text text-lighten-2 view-recipe\"\n            to={`/meal/${meal.idMeal}`}\n          style={{ fontWeight: 'bold' }}  // Add inline style for bold text\n        >\n          view recipe\n        </Link>\n\n        </div>\n        <div className=\"card-reveal\">\n          <span className=\"card-title brown-text text-darken-1\">\n            {meal.strMeal}\n            <i className=\"material-icons right\">close</i>\n          </span>\n          <p>\n            <span className=\"brown-text text-dark-1\">Category: </span>\n            {meal.strCategory}\n          </p>\n          <p>\n            <span className=\"brown-text text-dark-1\">Area: </span>\n            {meal.strArea}\n          </p>\n          <small>\n            <span className=\"brown-text text-dark-1\">Tags: </span>\n            {meal.strTags}\n          </small>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Meal;\n","import React from \"react\";\nimport Meal from \"./Meal\";\n\nconst Meals = ({ meals }) => {\n  return (\n    <div>\n      <div className=\"row margin-tb\">\n        {meals.map((meal) => (\n          <Meal key={meal.idMeal} meal={meal} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Meals;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { searchMealByName } from \"../api/ApiCall\";\nimport Meals from \"../components/Meals\";\n\nconst SearchResult = () => {\n  const [meals, setMeals] = useState([]);\n  const [isEmpty, setIsEmpty] = useState([true]);\n  let { param } = useParams();\n\n  useEffect(() => {\n    searchResult();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const searchResult = async () => {\n    const data = await searchMealByName(param);\n    if (data) {\n      setIsEmpty(false);\n      return setMeals(data);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        {meals && !isEmpty > 0 ? (\n          <p className=\"brown-text text-darken-2\">\n            <span>{`${meals.length} meals found for \"${param}\"`}</span>\n          </p>\n        ) : (\n          <div className=\"margin-tb mb-3\">\n            <span>{`No meals found for \"${param}\"`}</span>\n          </div>\n        )}\n      </div>\n      <div className=\"row container\">\n        <Meals meals={meals} />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;\n"],"sourceRoot":""}